package dp;

import java.util.*;
import java.io.*;

public class Main {

	
	public static boolean[] visited;
	public static int[] map;
	public static int last;
	public static List<Integer> arr = new ArrayList<>();
	public static void main(String args[]) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int n = Integer.parseInt(st.nextToken());
		map = new int[n+1];
		
		for(int j = 1;j<=n;j++)
		{
			st = new StringTokenizer(br.readLine());
			map[j] = Integer.parseInt(st.nextToken());
		}
		visited = new boolean[n+1];
		for(int i=1;i<=n;i++)
		{
			visited[i] = true;
			last = i;
			dfs(i);
			visited[i] = false;
		}
		bw.write(arr.size()+"\n");
		Collections.sort(arr);
		for(int list : arr)
			bw.write(list+"\n");
		
		bw.flush();
		bw.close();
		
	}
	public static void dfs(int i)
	{
		if(!visited[map[i]])
		{
			visited[map[i]] = true;
			dfs(map[i]);
			visited[map[i]] = false;
		}
		if(last == map[i])
		{
			arr.add(last);
		}
		
	}
	
		
}

		

