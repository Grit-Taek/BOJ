#include <cstdio>
#include <queue>
#include <cstring>
using namespace std;

int vertex, edge, startVertex;
int map[1001][1001];
bool visited[1001];
queue<int> q;

void dfs(int num) {

    printf("%d ", num);
    visited[num] = true;
    for(int i=1;i<=vertex;i++)
    {
        if(visited[i] || map[num][i] == 0) continue;
        dfs(i);
    }
}

void bfs(int num) {

    q.push(num);
    visited[num] = true;
    while (!q.empty())
    {
        num = q.front();
        printf("%d ", num);
        q.pop();
        for(int j=1;j<=vertex;j++) {
            if(visited[j] || map[num][j] == 0) continue;
            q.push(j);
            visited[j] = true;
        }
    }
}

int main()
{
    scanf("%d %d %d", &vertex, &edge, &startVertex);

    for(int i=1;i<=edge ; i++)
    {
        int x,y;
        scanf("%d %d", &x,&y);
        map[x][y] = 1;
        map[y][x] = 1;
    }
    dfs(startVertex);
    memset(visited , 0 , sizeof(visited));
    printf("\n");
    bfs(startVertex);
    return 0;

}
