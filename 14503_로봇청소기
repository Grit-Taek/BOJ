import java.io.*;
import java.util.*;
class Main {
	
	public static int n,m;
	public static int[][] map;

	public static int[] dx = {-1,0,1,0},dy = {0,1,0,-1};

	public static void main(String[] args) throws IOException
	{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine());
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		map = new int[n][m];

		int x, y, dir;

		st = new StringTokenizer(br.readLine());
		x = Integer.parseInt(st.nextToken());
		y = Integer.parseInt(st.nextToken());
		dir = Integer.parseInt(st.nextToken());

		for(int i=0;i<n;i++)
		{
			st = new StringTokenizer(br.readLine());
			for(int j=0;j<m;j++)
				map[i][j] = Integer.parseInt(st.nextToken());
		}
		
		int res = clean(x,y,dir);
//		bw.write(res);
//		bw.flush();
//		bw.close();
		System.out.println(res);
	}
	
	public static int clean(int x, int y, int dir)
	{
		int cnt = 0, answer = 0, nx, ny;
		boolean flag = true;
		while(flag)
		{
			if(map[x][y] == 0)
			{
				map[x][y] = 2;
				answer++;
			}
			while(true)
			{
				if(cnt == 4)
				{
					nx = x - dx[dir];
					ny = y - dy[dir];
					
					if(map[nx][ny]== 1)
					{
						flag = false;
						break;
					}
					else
					{
						x = nx;
						y = ny;
						cnt = 0;
					}
				}
				dir = (dir+3) % 4;
				nx = x + dx[dir];
				ny = y + dy[dir];
				
				if(map[nx][ny] == 0)
				{
					cnt = 0;
					x = nx;
					y = ny;
					break;
				}
				else
				{
					cnt++;
					continue;
				}
			}
		}
		return answer;
	}
}


